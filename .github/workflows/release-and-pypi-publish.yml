################################################################################################################
#
# This GitHub Action workflow automates several processes for the 'fastlane_bot' Python project.
# It consists of four main jobs: version bumping, release creation, changelog generation, and PyPi package publishing.
#
# 1. Version Bumping ('bump_version'): This job automatically increments the minor version of the project, as defined in 'fastlane_bot/__init__.py'.
# This is done using 'bumpversion', a Python library for version bumping.
#
# 2. Release Creation ('release'): Upon successful version bumping, a new GitHub release is created,
# using the incremented version number as the release's tag.
#
# 3. Changelog Generation ('generate_changelog'): After the creation of the new release,
# this job generates a changelog that provides a record of changes made to the project, including new features, bug fixes, and more.
# The generation is handled by the 'github-changelog-generator-action' GitHub Action.
#
# 4. PyPi Package Publishing ('publish'): The final job publishes the new version of the project to PyPi,
# making the new version accessible via pip install. This job is executed after the successful completion of all previous jobs,
# ensuring that all changes are included in the published package.
#
# (c) Copyright Bprotocol foundation 2023.
# Licensed under MIT
#
################################################################################################################


name: Bump Version, Create Release, Publish, and Generate Changelog

on:
  push:
    branches:
      - release-*

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Ganesh-CLI
        run: npm install -g ganache
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --force-reinstall
      - name: Setup Brownie
        run: |
          brownie networks import ./brownie-config.yaml true
          brownie networks delete mainnet
          brownie networks add "Ethereum Mainnet" "mainnet" host="https://eth-mainnet.alchemyapi.io/v2/$WEB3_ALCHEMY_PROJECT_ID" chainid=1
          brownie networks set_provider alchemy
        env:
          TENDERLY_FORK: '${{ secrets.TENDERLY_FORK }}'
          WEB3_ALCHEMY_PROJECT_ID: '${{ secrets.WEB3_ALCHEMY_PROJECT_ID }}'
          ETHERSCAN_TOKEN: '${{ secrets.ETHERSCAN_TOKEN }}'
      - name: Install bumpversion
        run: pip install bumpversion
      - name: Bump version and set output
        id: bump_version_and_set_output
        run: |
          CURRENT_VERSION=$(python -c "import fastlane_bot; print(fastlane_bot.__version__)")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_VERSION="${MAJOR}.$((MINOR + 1)).${PATCH}"
          sed -i "s/$CURRENT_VERSION/$NEW_VERSION/" fastlane_bot/__init__.py
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Bump version" -a
          echo "::set-output name=version::$NEW_VERSION"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref }}
  release:
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.version }}
          release_name: v${{ steps.bump_version.outputs.version }}
          draft: false
          prerelease: false
  generate_changelog:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GH_TOKEN }}
  publish:
    needs: generate_changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Ganesh-CLI
        run: npm install -g ganache
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --force-reinstall
      - name: Setup Brownie
        run: |
          brownie networks import ./brownie-config.yaml true
          brownie networks delete mainnet
          brownie networks add "Ethereum Mainnet" "mainnet" host="https://eth-mainnet.alchemyapi.io/v2/$WEB3_ALCHEMY_PROJECT_ID" chainid=1
          brownie networks set_provider alchemy
        env:
          TENDERLY_FORK: '${{ secrets.TENDERLY_FORK }}'
          WEB3_ALCHEMY_PROJECT_ID: '${{ secrets.WEB3_ALCHEMY_PROJECT_ID }}'
          ETHERSCAN_TOKEN: '${{ secrets.ETHERSCAN_TOKEN }}'
      - name: Create .env file
        run: |
          echo TENDERLY_FORK=$TENDERLY_FORK > .env
          echo WEB3_ALCHEMY_PROJECT_ID=$WEB3_ALCHEMY_PROJECT_ID >> .env
          echo ETHERSCAN_TOKEN=$ETHERSCAN_TOKEN >> .env
          echo DEFAULT_MIN_PROFIT_BNT=$DEFAULT_MIN_PROFIT_BNT >> .env
          echo ETH_PRIVATE_KEY_BE_CAREFUL=$ETH_PRIVATE_KEY_BE_CAREFUL >> .env
          echo TENDERLY_FORK_ID=$TENDERLY_FORK_ID >> .env
        env:
          TENDERLY_FORK: '${{ secrets.TENDERLY_FORK }}'
          TENDERLY_FORK_ID: '${{ secrets.TENDERLY_FORK }}'
          WEB3_ALCHEMY_PROJECT_ID: '${{ secrets.WEB3_ALCHEMY_PROJECT_ID }}'
          ETHERSCAN_TOKEN: '${{ secrets.ETHERSCAN_TOKEN }}'
          DEFAULT_MIN_PROFIT_BNT: '${{ secrets.DEFAULT_MIN_PROFIT_BNT }}'
          ETH_PRIVATE_KEY_BE_CAREFUL: '${{ secrets.ETH_PRIVATE_KEY_BE_CAREFUL }}'
      - name: Install package
        run: |
          python setup.py install
      - name: Build package
        run: python setup.py sdist
      - name: Build wheel
        run: |
          pip install wheel
          python setup.py bdist_wheel
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.FASTLANE_PYPI_API_TOKEN }}
          repository-url: https://upload.pypi.org/legacy/

